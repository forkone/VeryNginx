upstream vn_upstream{
    server 127.0.0.1;
    balancer_by_lua_file /opt/verynginx/verynginx/lua_script/on_banlance.lua;
    keepalive 1024; #Connection pool
}
upstream captcha_upstream{
    server 127.0.0.1:8082;
}

lua_package_path '/opt/verynginx/verynginx/lua_script/?.lua;/opt/verynginx/verynginx/lua_script/module/?.lua;/opt/verynginx/verynginx/lua_script/resty/?.lua;;';
lua_package_cpath '/opt/verynginx/verynginx/lua_script/?.so;;';   
lua_code_cache on;
lua_load_resty_core off;	# new version of lua_nginx_module require this module on default

lua_shared_dict status 1m;
lua_shared_dict blackip 10m;
lua_shared_dict frequency_limit 10m;
lua_shared_dict summary_long 10m;
lua_shared_dict summary_short 10m;

init_by_lua_file /opt/verynginx/verynginx/lua_script/on_init.lua;
init_worker_by_lua_file /opt/verynginx/verynginx/lua_script/on_init_worker.lua;
rewrite_by_lua_file /opt/verynginx/verynginx/lua_script/on_rewrite.lua;
access_by_lua_file /opt/verynginx/verynginx/lua_script/on_access.lua;
log_by_lua_file /opt/verynginx/verynginx/lua_script/on_log.lua;


server {
        listen       80;
        server_name  www.airwall.com;
        access_log   logs/www.airwall.com_access.log;
        error_log    logs/www.airwall.com_error.log;
        index        index.html index.htm;
        include      /opt/verynginx/verynginx/nginx_conf/in_server_block.conf;

        if ($host = "airwall.com"){
        rewrite ^/(.*)$ http://www.airwall.com/$1 permanent;
        }

        lua_need_request_body on;
        set $dm_cookie "";
        if ($http_cookie ~* "(.+)(?:;|$)") {
            set $dm_cookie $1;
        }

        set $req_header "";
        header_filter_by_lua '
        local h = ngx.req.get_headers()
        for k, v in pairs(h) do
            ngx.var.req_header = ngx.var.req_header .. k.."="..v.." "
        end
        ';

	location / {
            root   html;
            index  index.html index.htm;
            proxy_next_upstream http_502 http_504 error timeout invalid_header;
            include ./proxy.conf;
        }

        location /blackip {
            root   html;
            index  index.html index.htm;
            default_type  text/html;
            proxy_next_upstream http_502 http_504 error timeout invalid_header;
            include ./proxy.conf;
            content_by_lua_block {ngx.say(ngx.shared.blackip:get_keys())  ngx.say(ngx.shared.blackip:get("last_update_time") ) }
        }

        location /status {
            default_type  text/html;
            content_by_lua_block {ngx.say(ngx.shared.status:get_keys())  ngx.say(ngx.localtime())}
        }

        location /freq {
            default_type  text/html;
            content_by_lua_block {ngx.say(ngx.shared.frequency_limit:get_keys())  ngx.say(ngx.localtime())}
        }

        location /summary_long {
            default_type  text/html;
            content_by_lua_block {ngx.say(ngx.shared.summary_long:get_keys())  ngx.say(ngx.localtime())}
        }

        location /summary_short {
            default_type  text/html;
            content_by_lua_block {ngx.say(ngx.shared.summary_short:get_keys())  ngx.say(ngx.localtime())}
        }

        location /test {
            default_type  text/html;
	    content_by_lua_block { ngx.say("ngx.now is ".. ngx.now() .. " ngx.time is "..ngx.time() .." ngx.localtime is "..ngx.localtime() .."  ngx.utctime is ".. ngx.utctime() ) }
	}

	error_page   500 502 503 504  /50x.html;
    	location = /50x.html {
            root   html;
        }
}

