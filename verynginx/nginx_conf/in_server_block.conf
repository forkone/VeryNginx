set $vn_exec_flag '';
set $vn_ctx_dump '';

#for proxy_pass backend
set $vn_proxy_scheme '';
set $vn_proxy_host '';
set $vn_proxy_port '';
set $vn_header_host '';
set $vn_static_expires 'epoch';

#for static file backend
set $vn_static_root '';

#for captcha server
set $captcha_proxy_scheme 'http';
set $captcha_proxy_host '127.0.0.1';
set $captcha_proxy_port '8082';

location @vn_static {
    expires $vn_static_expires;
    root $vn_static_root;
}

location @vn_proxy {
    proxy_set_header Host $vn_header_host;
    #proxy_set_header X-Real-IP $remote_addr;
    #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header User-Agent $http_user_agent;
    proxy_pass $vn_proxy_scheme://vn_upstream;
    proxy_ssl_verify off;
}

location ^~ /airwall-captcha {
    proxy_pass $captcha_proxy_scheme://$captcha_proxy_host:$captcha_proxy_port;
    proxy_cookie_path /airwall-captcha /airwall-captcha;
    proxy_set_header Host $host;
    proxy_set_header X-Real_IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}

location /blackip {
    default_type  text;
    content_by_lua_block {
        local blackip = ngx.shared.blackip
        local blackip_keys = blackip:get_keys()
        for k,v in ipairs(blackip_keys) do
            ngx.say(v.."        value        "..blackip:get(v))
        end
    }
}

